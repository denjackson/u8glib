Linux/Ubuntu

== ARM gcc ==

From 
  https://launchpad.net/gcc-arm-embedded/
download and extract 
  Linux installation tarball

== LPC flash utility ==

From
  http://sourceforge.net/projects/lpc21isp/files/
download, extract and compile (make)
  lpc21isp tar file

In the u8g example files, update the Makefile with the path to the 
  ARM gcc	("GCCPATH" in the Makeilfe)
and
  LPC flash utility ("FLASHTOOL"  in the Makeilfe)

== Prepare for target controller ==

Depending on your controller, do one of the following:

1) Target controller is named in this U8glib distribution
    --> Nothing to do. Examples will directly work
2) A member of the same controller family is available in the U8glib distribution
    --> locate the *.ld script in the "common" folder and update the FLASH and RAM values
3) If neither 1) or 2) is true for the target controller, one example subdirectory (e.g.
    lpc1114 can be used as template. Usually you need to update/replace all files
    in the common folder.

== Compile U8g example ==

Inside the folder of one of the examples:
  make upload
will compiler, link and upload the example



Windows

== Min-GW ==


Windows driver for the USB to UART convert.
For FTDI devices, use the virtual com port (VCP) driver.
Download and install:
	http://www.ftdichip.com/Drivers/VCP.htm

Flash tool: FlashMagic will work here:
Download and install:
	http://www.flashmagictool.com/



== ARM gcc ==

From 
  https://launchpad.net/gcc-arm-embedded/
download and extract 
  Windows installer
Default path:  
  /c/Program\ Files\ \(x86\)/GNU\ Tools\ ARM\ Embedded/4.7\ 2013q2/

Makefile lib feature does not work...

http://www.flashmagictool.com/
Enable "Erase blocks used by flashfile"

make instead of mingw:
http://gnuwin32.sourceforge.net/packages/make.htm
Download "Complete package, except sources"
